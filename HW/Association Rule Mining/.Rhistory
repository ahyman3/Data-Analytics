mpg[, char_var] <- lapply(mpg[, char_var], as.factor)
char_var
library(arules)
mpg$dsipl_grp <- discretize(mpg$displ, method = "frequency", breaks = 3,
labels = "low", "medium", "high")
library(arules)
mpg$dsipl_grp <- discretize(mpg$displ, method = "frequency", breaks = 3,
labels = "low", "medium", "high")
mpg$dsipl_grp <- discretize(mpg$displ, method = "frequency", breaks = 3,
labels = c("low", "medium", "high"))
mpg %>%
group_by(disp) %>% summarise(avg_displ = mean(displ), count = n(), min = min(displ), max = max(displ))
mpg %>%
group_by(displ) %>% summarise(avg_displ = mean(displ), count = n(), min = min(displ), max = max(displ))
mpg %>%
group_by(displ_grp) %>% summarise(avg_displ = mean(displ), count = n(), min = min(displ), max = max(displ))
mpg$displ_grp <- discretize(mpg$displ, method = "frequency", breaks = 3,
labels = c("low", "medium", "high"))
mpg %>%
group_by(displ_grp) %>% summarise(avg_displ = mean(displ), count = n(), min = min(displ), max = max(displ))
#Normalize data to mean of 0 and standard deviation of 1
mpg$disp_scale <- scale(mpg$displ, center = TRUE, scale = TRUE)
sd(mpg$disp_scale)
head(mpg)
type(mpg$disp_scale)
str(mpg$disp_scale)
sd(mpg$disp_scale)
#Outliers that are larger than 1.5 time the IQR from the 75% if high and 25% if low
boxplot(mpg$hwy)
mpg$hwy[mpg$hwy %in% boxplot.stats(mpg$hwy)$out] <- median(mpg$hwy, na.rm = T)
boxplot(mpg$hwy)
#Duplicate records
nor(mpg[!duplicated(mpg)])
#Duplicate records
nrow(mpg[!duplicated(mpg)])
#Duplicate records
nrow(mpg[!duplicated(mpg), ])
#All records
nrow(mpg)
#Duplicate records
nrow(mpg[!duplicated(mpg), ])
#Get rid of duplicated
mpg %>%
distinct(.keep_all = T) %>%
nrow()
HELP(distinct())
help(distinct)
#aggregation
mpg %>%
group_by(manufacturer) %>%
summarise(avg_city = mean(cty)) %>%
arrange(desc(avg_cty)) %>%
head(5)
#aggregation
mpg %>%
group_by(manufacturer) %>%
summarise(avg_city = mean(cty)) %>%
arrange(desc(avg_cty)) %>%
head(5)
#aggregation
mpg %>%
group_by(manufacturer) %>%
summarise(avg_city = mean(cty)) %>%
arrange(desc(avg_city)) %>%
head(5)
#Stratified sampling
prop.table(table(mpg$drv))
sample_index <- createDataPartition(mpg$drv, p = 0.3, list = F)
sample_index
#Stratified sampling
prop.table(table(mpg$drv))
prop.table(table(mpg$drv[sample_index]))
setwd("~/Documents/Syracuse/Current Classes/Data Analytics/HW/HW3 - Week 3")
knitr::opts_chunk$set(echo = TRUE)
library(arules)
library(arules)
library(arulesViz)
?arules
help("read.transactions")
head(data)
data <- read.csv("bankdata_csv_all.csv")
head(data)
library(dplyr)
library(tidyr)
library(arules)
library(arulesViz)
library(dplyr)
library(tidyr)
head(data)
data <- data %>% select(-id)
head(data)
data$age <- discretize(data$age, labels=c("Young", "Adult", "Old"))
head(data)
data <- read.csv("bankdata_csv_all.csv")
head(data)
data <- data %>% select(-id)
data$age <- discretize(data$age, labels=c("Young", "Adult", "Old"))
head(data)
levels(data$age)
hist(data$income)
#Discretize Income
data$age <- discretize(data$income, method = "frequency", breaks = 5, labels=
c("Low", "Lower-Middle", "Middle", "Upper Middle", "Upper"))
head(data)
#Read data
data <- read.csv("bankdata_csv_all.csv")
#Get rid of ID
data <- data %>% select(-id)
#Discretize Age
data$age <- discretize(data$age, labels=c("Young", "Adult", "Old"))
#Discretize Income
data$income <- discretize(data$income, method = "frequency", breaks = 5, labels=
c("Low", "Lower-Middle", "Middle", "Upper-Middle", "Upper"))
head(data)
library(ggplot2)
ggplot(data, aes(income)) + geom_bar()
head(data)
data[data$children == 0, "children"] = "None"
data[data$children == 1, "children"] = "One"
data[data$children > 1, "children"] = "Multiple"
head(data)
head(data)
#Read data
data <- read.csv("bankdata_csv_all.csv")
head(data)
#Read data
data <- read.csv("bankdata_csv_all.csv")
#Get rid of ID
data <- data %>% select(-id)
#Discretize Age
data$age <- discretize(data$age, labels=c("Young", "Adult", "Old"))
#Discretize Income
data$income <- discretize(data$income, method = "frequency", breaks = 5, labels=
c("Low", "Lower-Middle", "Middle", "Upper-Middle", "Upper"))
data[data$children == 0, "children"] <- "None"
data[data$children == 1, "children"] <- "One"
data[data$children > 1, "children"] <- "Multiple"
head(data)
#Read data
data <- read.csv("bankdata_csv_all.csv")
#Get rid of ID
data <- data %>% select(-id)
#Discretize Age
data$age <- discretize(data$age, labels=c("Young", "Adult", "Old"))
#Discretize Income
data$income <- discretize(data$income, method = "frequency", breaks = 5, labels=
c("Low", "Lower-Middle", "Middle", "Upper-Middle", "Upper"))
data$children <- as.character(data$children)
data[data$children == 0, "children"] <- "None"
data[data$children == 1, "children"] <- "One"
#Read data
data <- read.csv("bankdata_csv_all.csv")
#Get rid of ID
data <- data %>% select(-id)
#Discretize Age
data$age <- discretize(data$age, labels=c("Young", "Adult", "Old"))
#Discretize Income
data$income <- discretize(data$income, method = "frequency", breaks = 5, labels=
c("Low", "Lower-Middle", "Middle", "Upper-Middle", "Upper"))
#Read data
data <- read.csv("bankdata_csv_all.csv")
#Get rid of ID
data <- data %>% select(-id)
#Discretize Age
data$age <- discretize(data$age, labels=c("Young", "Adult", "Old"))
#Discretize Income
data$income <- discretize(data$income, method = "frequency", breaks = 5, labels=
c("Low", "Lower-Middle", "Middle", "Upper-Middle", "Upper"))
data[data$children == 0, "childrenCategory"] <- "None"
data[data$children == 1, "childrenCategory"] <- "One"
data[data$children > 1, "childrenCategory"] <- "Multiple"
head(data)
#Read data
data <- read.csv("bankdata_csv_all.csv")
#Get rid of ID
data <- data %>% select(-id)
#Discretize Age
data$age <- discretize(data$age, labels=c("Young", "Adult", "Old"))
#Discretize Income
data$income <- discretize(data$income, method = "frequency", breaks = 5, labels=
c("Low", "Lower-Middle", "Middle", "Upper-Middle", "Upper"))
data$children <- ifelse(data$children == 0, "None", ifelse(data$children == 1, "One", "Multiple"))
head(data)
#Read data
data <- read.csv("bankdata_csv_all.csv")
#Get rid of ID
data <- data %>% select(-id)
#Discretize Age
data$age <- discretize(data$age, labels=c("Young", "Adult", "Old"))
#Discretize Income
data$income <- discretize(data$income, method = "frequency", breaks = 5, labels=
c("Low", "Lower-Middle", "Middle", "Upper-Middle", "Upper"))
data$children <- ifelse(data$children == 0, "None", ifelse(data$children == 1, "One", "Multiple"))
data$children <- as.factor(data$children)
head(data)
ggplot(data, aes(region)) + geom_bar()
?DATAFRAME
rule <- apriori(data, parameter = list("supp" = 0.1, "conf" = 0.7))
inspect(rules)
rules <- apriori(data, parameter = list("supp" = 0.1, "conf" = 0.7))
inspect(rules)
rules <- sort(rules, by = "confidence")
inspect(rules)
rules <- apriori(data, parameter = list("supp" = 0.2, "conf" = 0.7))
rules <- sort(rules, by = "confidence")
inspect(rules)
dim(data)
inspect(rules)
rules <- apriori(data, parameter = list("supp" = 0.15, "conf" = 0.7))
rules <- sort(rules, by = "confidence")
inspect(rules)
rules <- apriori(data, parameter = list("supp" = 0.15, "conf" = 0.8, "lift" = 1.25))
rules <- apriori(data, parameter = list("supp" = 0.15, "conf" = 0.8))
rules <- sort(rules, by = "confidence")
inspect(rules)
help(show)
help(arules::show)
show()
help("rhs")
head(data)
rules <- apriori(data, parameter = list("supp" = 0.1, "conf" = 0.8), appearance = list(rhs=c("pep=YES", "pep=NO")))
rules <- sort(rules, by = "confidence")
inspect(rules)
rules <- apriori(data, parameter = list("supp" = 0.15, "conf" = 0.8), appearance = list(rhs=c("pep=YES", "pep=NO")))
rules <- sort(rules, by = "confidence")
inspect(rules)
rules <- apriori(data, parameter = list("supp" = 0.125, "conf" = 0.8), appearance = list(rhs=c("pep=YES", "pep=NO")))
rules <- sort(rules, by = "confidence")
inspect(rules)
rules <- apriori(data, parameter = list("supp" = 0.1, "conf" = 0.8), appearance = list(rhs=c("pep=YES", "pep=NO")))
rules <- sort(rules, by = "confidence")
inspect(rules)
rules <- apriori(data, parameter = list("supp" = 0.2, "conf" = 0.8), appearance = list(rhs=c("pep=YES", "pep=NO")))
rules <- sort(rules, by = "confidence")
inspect(rules)
rules <- apriori(data, parameter = list("supp" = 0.1, "conf" = 0.8), appearance = list(rhs=c("pep=YES", "pep=NO")))
rules <- sort(rules, by = "confidence")
inspect(rules)
rules <- apriori(data, parameter = list("supp" = 0.1, "conf" = 0.7), appearance = list(rhs=c("pep=YES", "pep=NO")))
rules <- sort(rules, by = "confidence")
inspect(rules)
#Read data
data <- read.csv("bankdata_csv_all.csv")
#Get rid of ID
data <- data %>% select(-id)
#Discretize Age
data$age <- discretize(data$age, labels=c("Young", "Adult", "Old"))
#Discretize Income
data$income <- discretize(data$income, method = "frequency", breaks = 5, labels=
c("Low", "Lower-Middle", "Middle", "Upper-Middle", "Upper"))
#Discretizing children
data$children <- ifelse(data$children == 0, "No", "Yes")
#Making children a factor
data$children <- as.factor(data$children)
rules <- apriori(data, parameter = list("supp" = 0.1, "conf" = 0.7), appearance = list(rhs=c("pep=YES", "pep=NO")))
rules <- sort(rules, by = "confidence")
inspect(rules)
#Read data
data <- read.csv("bankdata_csv_all.csv")
#Get rid of ID
data <- data %>% select(-id)
#Discretize Age
data$age <- discretize(data$age, labels=c("Young", "Adult", "Old"))
#Discretize Income
data$income <- discretize(data$income, method = "frequency", breaks = 5, labels=
c("Low", "Lower-Middle", "Middle", "Upper-Middle", "Upper"))
#Discretizing children
data$children <- ifelse(data$children == 0, "None", ifelse(data$children == 1, "One", "Multiple"))
#Making children a factor
data$children <- as.factor(data$children)
rules <- apriori(data, parameter = list("supp" = 0.1, "conf" = 0.7), appearance = list(rhs=c("pep=YES", "pep=NO")))
rules <- sort(rules, by = "confidence")
inspect(rules)
rules <- apriori(data, parameter = list("supp" = 0.1, "conf" = 0.75), appearance = list(rhs=c("pep=YES", "pep=NO")))
rules <- sort(rules, by = "confidence")
inspect(rules)
#Read data
data <- read.csv("bankdata_csv_all.csv")
#Get rid of ID
data <- data %>% select(-id)
#Discretize Age
data$age <- discretize(data$age, labels=c("Young", "Adult", "Old"))
#Discretize Income
data$income <- discretize(data$income, method = "frequency", breaks = 5, labels=
c("Low", "Lower-Middle", "Middle", "Upper-Middle", "Upper"))
#Discretizing children
data$children <- ifelse(data$children == 0, "None", ifelse(data$children == 1, "One", ifelse(data$children == 2, "Two", "3 or More")))
#Making children a factor
data$children <- as.factor(data$children)
rules <- apriori(data, parameter = list("supp" = 0.1, "conf" = 0.75), appearance = list(rhs=c("pep=YES", "pep=NO")))
rules <- sort(rules, by = "confidence")
inspect(rules)
rules <- apriori(data, parameter = list("supp" = 0.1, "conf" = 0.7), appearance = list(rhs=c("pep=YES", "pep=NO")))
rules <- sort(rules, by = "confidence")
inspect(rules)
rules <- sort(rules, by = "count")
inspect(rules)
rules <- apriori(data, parameter = list("supp" = 0.1, "conf" = 0.7), appearance = list(rhs=c("pep=YES")))
rules <- sort(rules, by = "count")
inspect(rules)
rules <- apriori(data, parameter = list("supp" = 0.1, "conf" = 0.7), appearance = list(rhs=c("pep=YES")))
rules <- sort(rules, by = "confidence")
inspect(rules)
rules <- apriori(data, parameter = list("supp" = 0.1, "conf" = 0.7), appearance = list(rhs=c("pep=YES", "pep=NO")))
rules <- sort(rules, by = "confidence")
inspect(rules)
rules <- apriori(data, parameter = list("supp" = 0.15, "conf" = 0.7), appearance = list(rhs=c("pep=YES", "pep=NO")))
rules <- sort(rules, by = "confidence")
inspect(rules)
rules <- apriori(data, parameter = list("supp" = 0.125, "conf" = 0.7), appearance = list(rhs=c("pep=YES", "pep=NO")))
rules <- sort(rules, by = "confidence")
inspect(rules)
rules <- apriori(data, parameter = list("supp" = 0.1, "conf" = 0.7), appearance = list(rhs=c("pep=YES", "pep=NO")))
rules <- sort(rules, by = "confidence")
inspect(rules)
?tidyr
#Read data
data <- read.csv("bankdata_csv_all.csv")
#Read data
data <- read.csv("bankdata_csv_all.csv")
#Get rid of ID
data <- data %>% select(-id)
hist(data$age)
#Read data
data <- read.csv("bankdata_csv_all.csv")
#Get rid of ID
data <- data %>% select(-id)
hist(data$age)
#Discretize Age
data$age <- discretize(data$age, labels=c("Young", "Adult", "Old"))
#Discretize Income
data$income <- discretize(data$income, method = "frequency", labels=
c("Low", "Middle", "Upper"))
#Discretizing children
data$children <- ifelse(data$children == 0, "None", ifelse(data$children == 1, "One", ifelse(data$children == 2, "Two", "3 or More")))
#Making children a factor
data$children <- as.factor(data$children)
rules <- apriori(data, parameter = list("supp" = 0.1, "conf" = 0.7), appearance = list(rhs=c("pep=YES", "pep=NO")))
rules <- sort(rules, by = "confidence")
inspect(rules)
hist(data$income)
#Read data
data <- read.csv("bankdata_csv_all.csv")
#Get rid of ID
data <- data %>% select(-id)
hist(data$income)
?discretize
#Discretize Income
data$income <- discretize(data$income, method = "interval", labels=
c("Low", "Middle", "Upper"))
#Discretizing children
data$children <- ifelse(data$children == 0, "None", ifelse(data$children == 1, "One", ifelse(data$children == 2, "Two", "3 or More")))
#Making children a factor
data$children <- as.factor(data$children)
rules <- apriori(data, parameter = list("supp" = 0.1, "conf" = 0.7), appearance = list(rhs=c("pep=YES", "pep=NO")))
#Read data
data <- read.csv("bankdata_csv_all.csv")
#Get rid of ID
data <- data %>% select(-id)
#Get rid of ID
data <- data %>% select(-id)
#Read data
data <- read.csv("bankdata_csv_all.csv")
#Get rid of ID
data <- data %>% select(-id)
#Discretize Age
data$age <- discretize(data$age, labels=c("Young", "Adult", "Old"))
#Discretize Income
data$income <- discretize(data$income, method = "interval", labels=
c("Low", "Middle", "Upper"))
#Discretizing children
data$children <- ifelse(data$children == 0, "None", ifelse(data$children == 1, "One", ifelse(data$children == 2, "Two", "3 or More")))
#Making children a factor
data$children <- as.factor(data$children)
rules <- apriori(data, parameter = list("supp" = 0.1, "conf" = 0.7), appearance = list(rhs=c("pep=YES", "pep=NO")))
rules <- sort(rules, by = "confidence")
inspect(rules)
#Read data
data <- read.csv("bankdata_csv_all.csv")
#Get rid of ID
data <- data %>% select(-id)
#hist of age
hist(data$age)
#Read data
data <- read.csv("bankdata_csv_all.csv")
#Get rid of ID
data <- data %>% select(-id)
#hist of age
hist(data$age)
#Discretize Age
data$age <- discretize(data$age, labels=c("Young", "Adult", "Old"))
#Discretize Income
data$income <- discretize(data$income, method = "interval", labels=
c("Low", "Middle", "Upper"))
ggplot(data, aes(income)) + geom_bar()
?hist
#Children hist
hist(data$children)
#Children hist
ggplot(data, aes(children)) + geom_bar()
#Read data
data <- read.csv("bankdata_csv_all.csv")
#Get rid of ID
data <- data %>% select(-id)
#hist of age
hist(data$age)
#Discretize Age
data$age <- discretize(data$age, labels=c("Young", "Adult", "Old"))
#hist of income
hist(data$income)
#Discretize Income
data$income <- discretize(data$income, method = "interval", labels=
c("Low", "Middle", "Upper"))
#Children hist
ggplot(data, aes(children)) + geom_bar()
#Discretizing children
data$children <- ifelse(data$children == 0, "None", ifelse(data$children == 1, "One", "Multiple"))
#Making children a factor
data$children <- as.factor(data$children)
rules <- apriori(data, parameter = list("supp" = 0.1, "conf" = 0.7), appearance = list(rhs=c("pep=YES", "pep=NO")))
rules <- sort(rules, by = "confidence")
inspect(rules)
rules <- apriori(data, parameter = list("supp" = 0.1, "conf" = 0.8), appearance = list(rhs=c("pep=YES", "pep=NO")))
rules <- sort(rules, by = "confidence")
inspect(rules)To
inspect(rules)
rules <- apriori(data, parameter = list("supp" = 0.1, "conf" = 0.75), appearance = list(rhs=c("pep=YES", "pep=NO")))
rules <- sort(rules, by = "confidence")
inspect(rules)
rules <- apriori(data, parameter = list("supp" = 0.2, "conf" = 0.8), appearance = list(rhs=c("pep=YES", "pep=NO")))
rules <- sort(rules, by = "confidence")
inspect(rules)
rules <- apriori(data, parameter = list("supp" = 0.2, "conf" = 0.8))
rules <- sort(rules, by = "confidence")
inspect(rules)
```{r}
rules <- apriori(data, parameter = list("supp" = 0.2, "conf" = 0.8), appearance = list(rhs=c("pep=YES", "pep=NO")))
rules <- sort(rules, by = "confidence")
inspect(rules)
rules <- apriori(data, parameter = list("supp" = 0.2, "conf" = 0.7), appearance = list(rhs=c("pep=YES", "pep=NO")))
rules <- sort(rules, by = "confidence")
inspect(rules)
rules <- apriori(data, parameter = list("supp" = 0.2, "conf" = 0.75), appearance = list(rhs=c("pep=YES", "pep=NO")))
rules <- sort(rules, by = "confidence")
inspect(rules)
rules <- apriori(data, parameter = list("supp" = 0.15, "conf" = 0.75), appearance = list(rhs=c("pep=YES", "pep=NO")))
rules <- sort(rules, by = "confidence")
inspect(rules)
rules <- apriori(data, parameter = list("supp" = 0.15, "conf" = 0.75))
rules <- sort(rules, by = "confidence")
inspect(rules)
rules <- apriori(data, parameter = list("supp" = 0.15, "conf" = 0.75), appearance = list(rhs=c("pep=YES", "pep=NO")))
rules <- sort(rules, by = "confidence")
inspect(rules)
summary(rules)
rules <- apriori(data, parameter = list("supp" = 0.1, "conf" = 0.75), appearance = list(rhs=c("pep=YES", "pep=NO")))
rules <- sort(rules, by = "confidence")
inspect(rules)
knitr::opts_chunk$set(echo = TRUE)
rules <- apriori(data, parameter = list("supp" = 0.1, "conf" = 0.75), appearance = list(rhs=c("pep=YES", "pep=NO")))
rules <- sort(rules, by = "lift")
inspect(rules)
library(arules)
library(arules)
library(arulesViz)
library(dplyr)
library(arulesViz)
library(dplyr)
library(ggplot2)
#Read data
data <- read.csv("bankdata_csv_all.csv")
#Get rid of ID
data <- data %>% select(-id)
#hist of age
hist(data$age)
#Discretize Age
data$age <- discretize(data$age, labels=c("Young", "Adult", "Old"))
#hist of income
hist(data$income)
#Discretize Income
data$income <- discretize(data$income, method = "interval", labels=
c("Low", "Middle", "Upper"))
#Children hist
ggplot(data, aes(children)) + geom_bar()
#Discretizing children
data$children <- ifelse(data$children == 0, "None", ifelse(data$children == 1, "One", "Multiple"))
#Making children a factor
data$children <- as.factor(data$children)
rules <- apriori(data, parameter = list("supp" = 0.1, "conf" = 0.75), appearance = list(rhs=c("pep=YES", "pep=NO")))
rules <- sort(rules, by = "lift")
inspect(rules)
rules <- apriori(data, parameter = list("supp" = 0.1, "conf" = 0.75), appearance = list(rhs=c("pep=YES", "pep=NO")))
rules <- sort(rules, by = "support")
inspect(rules)
rules <- apriori(data, parameter = list("supp" = 0.1, "support" = 0.75), appearance = list(rhs=c("pep=YES", "pep=NO")))
rules <- sort(rules, by = "support")
rules <- apriori(data, parameter = list("supp" = 0.1, "conf" = 0.75), appearance = list(rhs=c("pep=YES", "pep=NO")))
rules <- sort(rules, by = "confidence")
inspect(rules)
rules <- apriori(data, parameter = list("supp" = 0.1, "conf" = 0.75), appearance = list(rhs=c("pep=YES", "pep=NO")))
rules <- sort(rules, by = "lift")
inspect(rules)
ncol(data[(data$children == "One") & (data$pep == "YES"), ])
nrow(data[(data$children == "One") & (data$pep == "YES"), ])
nrow(data[(data$children == "One"), ])
110 / 135
110 / 600
nrow(data[(data$pep == "YES")])
nrow(data[(data$pep == "YES"),])
nrow(data[(data$children == "One"),])
110 / ((274 / 600) * (135 / 600))
(110 / 600) / ((274 / 600) * (135 / 600))
