data %>% group_by(school) %>%
select(-section) %>% colSums()
data %>% group_by(school) %>%
select(-section) %>% summarise_all(sum)
#Get the row totals, so a percentage can be made for each of the schools
dataGrouped <- rowPercentage(dataGrouped, school = T, schoolCol = "school")
#function to calculate the row percentage
rowPercentage <- function(df, school = F, schoolCol = NULL, section = F, sectionCol = NULL ){
df_temp <- df %>%
select(c("very.behind", "more.behind", "behind", "middling", "completed"))
totals <- rowSums(df_temp)
df_temp <- round(df_temp / totals * 100, 2)
if (school){
df_temp <- bind_cols(df[schoolCol], df_temp)
}
if (section){
df_temp <- bind_cols(df[sectionCol], df_temp)
}
return(df_temp)
}
#Get the row totals, so a percentage can be made for each of the schools
dataGrouped <- rowPercentage(dataGrouped, school = T, schoolCol = "school")
head(dataGrouped)
#compare the totals for the levels
dataGrouped <- data %>% group_by(school) %>%
select(-section) %>% summarise_all(sum)
head(dataGrouped)
#Get the row totals, so a percentage can be made for each of the schools
dataGrouped <- rowPercentage(dataGrouped, school = T, schoolCol = "school")
#Making the columns percentages
print(dataGrouped)
data %>% group_by(school) %>%
select(-section) %>% summarise_all(sum) %>%
prop.table()
data %>% group_by(school) %>%
select(-section) %>% summarise_all(sum) %>%
prop.table(1)
?prop.table
?sweep
data %>% group_by(school) %>%
select(-section) %>% summarise_all(sum) %>%
select(-school) %>% as.array() %>% prop.table()
#compare the totals for the levels
dataGrouped <- data %>% group_by(school) %>%
select(-section) %>% summarise_all(sum) %>%
lapply(rowPercentage)
data %>% group_by(school) %>%
select(-section) %>% summarise_all(sum) %>%
lapply(data$schoool, rowPercentage)
data %>% group_by(school) %>%
select(-section) %>% summarise_all(sum) %>%
lapply(rowPercentage)
#function to calculate the row percentage
rowPercentage <- function(df, school = F, schoolCol = NULL, section = F, sectionCol = NULL ){
df_temp <- df %>%
select(c("very.behind", "more.behind", "behind", "middling", "completed"))
totals <- rowSums(df_temp)
df_temp <- round(df_temp / totals * 100, 2)
if (school){
df_temp <- bind_cols(df[schoolCol], df_temp)
}
if (section){
df_temp <- bind_cols(df[sectionCol], df_temp)
}
return(df_temp)
}
#compare the totals for the levels
dataGrouped <- data %>% group_by(school) %>%
select(-section) %>% summarise_all(sum)
#Get the row totals, so a percentage can be made for each of the schools
dataGrouped <- rowPercentage(dataGrouped, school = T, schoolCol = "school")
#Making the columns percentages
print(dataGrouped)
#compare the totals for the levels
dataGrouped <- data %>% group_by(school) %>%
select(-section) %>% summarise_all(sum) %>%
rowPercentage(school = T, schoolCol = "school")
dataGrouped
#function to calculate the row percentage
rowPercentage <- function(df, school = F, schoolCol = NULL, section = F, sectionCol = NULL ){
df_temp <- df %>%
select(c("very.behind", "more.behind", "behind", "middling", "completed"))
totals <- rowSums(df_temp)
df_temp <- round(df_temp / totals * 100, 2)
if (school){
df_temp <- bind_cols(df[schoolCol], df_temp)
}
if (section){
df_temp <- bind_cols(df[sectionCol], df_temp)
}
return(df_temp)
}
#compare the totals for the levels
dataGrouped <- data %>% group_by(school) %>%
select(-section) %>% summarise_all(sum) %>%
rowPercentage(school = T, schoolCol = "school")
print(dataGrouped)
data %>% mutate(totalStudents = rowSums(.[3:7]))
data %>% mutate(totalStudents = rowSums(.[3:7])) %>%
transmute(more.behind = more.behind * 2, behind = behind * 3,
middling = middling * 4, completed = completed * 5)
data %>% mutate(totalStudents = rowSums(.[3:7])) %>%
mutate(more.behind = more.behind * 2, behind = behind * 3,
middling = middling * 4, completed = completed * 5)
data %>% mutate(totalStudents = rowSums(.[3:7])) %>%
mutate(more.behind = more.behind * 2, behind = behind * 3,
middling = middling * 4, completed = completed * 5) %>%
mutate(avg = sum(.[3:7] / totalStudents))
data %>% mutate(totalStudents = rowSums(.[3:7])) %>%
mutate(more.behind = more.behind * 2, behind = behind * 3,
middling = middling * 4, completed = completed * 5) %>%
mutate(avg = rowSums(.[3:7] / totalStudents))
data %>% mutate(totalStudents = rowSums(.[3:7])) %>%
mutate(more.behind = more.behind * 2, behind = behind * 3,
middling = middling * 4, completed = completed * 5) %>%
mutate(avg = rowSums(.[3:7] / totalStudents)) %>%
select(c(school, section, avg, totalStudents))
#plotting a histogram of the data
p1 <- ggplot(adj_data, aes(avg, fill = school)) + geom_histogram(bins = 15) + xlim(2, 5)
#ordering the data
adj_data <- data[, c("school", "section", "very.behind", "more.behind", "behind", "middling", "completed")]
#counting the total students for each section
adj_data$total <- rowSums(adj_data[,3:ncol(adj_data)])
#multiplying the student count by the grade levels to determine a class average
adj_data$avg <- rowSums(mapply('*', adj_data[,3:(ncol(adj_data) - 1)], 1:5)) / adj_data$total
#storing the school, section, section avg, and total students in the data frame
adj_data <- adj_data[, c("school", "section", "avg", "total")]
#plotting a histogram of the data
p1 <- ggplot(adj_data, aes(avg, fill = school)) + geom_histogram(bins = 15) + xlim(2, 5)
p1 <- p1 + geom_vline(xintercept = mean(adj_data$avg)) + ylab("Count") + xlab("Class Average")
p1 <- p1 + ggtitle("Distribution of Student Progress by Section")
p1
temp_data <- data %>% mutate(totalStudents = rowSums(.[3:7])) %>%
mutate(more.behind = more.behind * 2, behind = behind * 3,
middling = middling * 4, completed = completed * 5) %>%
mutate(avg = rowSums(.[3:7] / totalStudents)) %>%
select(c(school, section, avg, totalStudents))
#plotting a histogram of the data
p1 <- ggplot(temp_data, aes(avg, fill = school)) + geom_histogram(bins = 15) + xlim(2, 5)
p1 <- p1 + geom_vline(xintercept = mean(adj_data$avg)) + ylab("Count") + xlab("Class Average")
p1 <- p1 + ggtitle("Distribution of Student Progress by Section")
p1
head(adj_data[order(adj_data$avg), ], 5)
#Getting class average for student profress
adj_data <- data %>% mutate(totalStudents = rowSums(.[3:7])) %>%
mutate(more.behind = more.behind * 2, behind = behind * 3,
middling = middling * 4, completed = completed * 5) %>%
mutate(avg = rowSums(.[3:7] / totalStudents)) %>%
select(c(school, section, avg, totalStudents))
#plotting a histogram of the data
p1 <- ggplot(temp_data, aes(avg, fill = school)) + geom_histogram(bins = 15) + xlim(2, 5)
p1 <- p1 + geom_vline(xintercept = mean(adj_data$avg)) + ylab("Count") + xlab("Class Average")
p1 <- p1 + ggtitle("Distribution of Student Progress by Section")
p1
head(adj_data[order(adj_data$avg), ], 5)
plot.title <- paste("Total Students vs. Class Performance, R = ", round(cor(adj_data$total, adj_data$avg), 3), sep = "")
p2 <- ggplot(adj_data, aes(x = total, y = avg)) + geom_point(aes(color = school))
p2 <- p2 +  ggtitle("Number of Students vs. Performance") + xlab("Number of Students")
p2 <- p2 + ylab("Class Performance") + geom_smooth(method = 'lm', se = F)
p2 <- p2 + ggtitle(plot.title)
p2
plot.title <- paste("Total Students vs. Class Performance, R = ", round(cor(adj_data$total, adj_data$avg), 3), sep = "")
p2 <- ggplot(adj_data, aes(x = totalStudents, y = avg)) + geom_point(aes(color = school))
p2 <- p2 +  ggtitle("Number of Students vs. Performance") + xlab("Number of Students")
p2 <- p2 + ylab("Class Performance") + geom_smooth(method = 'lm', se = F)
p2 <- p2 + ggtitle(plot.title)
p2
#Attempt to plot each of the schools
new_data <- dataGrouped %>% gather("status", "percent", -school)
#Ordering data
new_data$status <- factor(new_data$status, levels = c("very.behind",
'more.behind', 'behind', 'middling', 'completed'), ordered = T)
#plotting the percentages for each school
p <- ggplot(new_data, aes(x = status, y = percent, group = Group.1)) + geom_line(aes(col = Group.1))
p <- p + xlab("Student Status") + ylab("Percentage")
p
#Attempt to plot each of the schools
new_data <- dataGrouped %>% gather("status", "percent", -school)
#Ordering data
new_data$status <- factor(new_data$status, levels = c("very.behind",
'more.behind', 'behind', 'middling', 'completed'), ordered = T)
#plotting the percentages for each school
p <- ggplot(new_data, aes(x = status, y = percent, group = school)) + geom_line(aes(col = Group.1))
p <- p + xlab("Student Status") + ylab("Percentage")
p
#Attempt to plot each of the schools
new_data <- dataGrouped %>% gather("status", "percent", -school)
#Ordering data
new_data$status <- factor(new_data$status, levels = c("very.behind",
'more.behind', 'behind', 'middling', 'completed'), ordered = T)
#plotting the percentages for each school
p <- ggplot(new_data, aes(x = status, y = percent, group = school)) + geom_line(aes(col = school))
p <- p + xlab("Student Status") + ylab("Percentage")
p
#Ordering data
#new_data$status
categories <- factor(new_data$status, levels = c("very.behind",
'more.behind', 'behind', 'middling', 'completed'), ordered = T)
new_data$status <- categories
#Attempt to plot each of the schools
new_data <- dataGrouped %>% gather("status", "percent", -school)
#Ordering data
#new_data$status
categories <- factor(new_data$status, levels = c("very.behind",
'more.behind', 'behind', 'middling', 'completed'), ordered = T)
new_data$status <- categories
new_data
#Attempt to plot each of the schools
new_data <- dataGrouped %>% gather("status", "percent", -school)
#Ordering data
categories <- factor(new_data$status, levels = c("very.behind",
'more.behind', 'behind', 'middling', 'completed'), ordered = T)
new_data$status <- categories
#plotting the percentages for each school
p <- ggplot(new_data, aes(x = status, y = percent, group = school)) + geom_line(aes(col = school))
p <- p + xlab("Student Status") + ylab("Percentage")
p
data %>% select(-section) %>% group_by(school) %>%
summarise_all(sum) %>% gather("status", "count", -school) %>%
mutate(status = categories)
data %>% select(-section) %>% group_by(school) %>%
summarise_all(sum) %>% gather("status", "count", -school) %>%
mutate(status = categories) %>% ggplot(aes(x = status, y = count, group = school)) +
geom_line()
data %>% select(-section) %>% group_by(school) %>%
summarise_all(sum) %>% gather("status", "count", -school) %>%
mutate(status = categories) %>% ggplot(aes(x = status, y = count, group = school, col = school)) +
geom_line()
#Getting percentage of each section and keeping the school and section name
data_section <- data %>% rowPercentage(school = T, schoolCol = "school", section = T, sectionCol = "section") %>%
gather("status", "percent", c(-school, -section)) %>% mutate(status = categories,
school_section = paste(data_section$school, "-", data_section$section, sep = ""))
#Getting percentage of each section and keeping the school and section name
data_section <- data %>% rowPercentage(school = T, schoolCol = "school", section = T, sectionCol = "section") %>%
gather("status", "percent", c(-school, -section)) %>% mutate(status = categories)
#Getting percentage of each section and keeping the school and section name
data_section <- data %>% rowPercentage(school = T, schoolCol = "school", section = T, sectionCol = "section") %>%
gather("status", "percent", c(-school, -section))
#ordering the status
data_section$status <- categories
#Creating a new column for school-section
data_section$school_section <- paste(data_section$school, "-", data_section$section, sep = "")
#Plotting a line chart for each of the stauses
p1 <- ggplot(data_section, aes(x = status, y = percent)) + geom_line(aes(group = school_section, color = school))
p1
#Getting percentage of each section and keeping the school and section name
data_section <- data %>% rowPercentage(school = T, schoolCol = "school", section = T, sectionCol = "section") %>%
gather("status", "percent", c(-school, -section))
#ordering the status
data_section$status <- factor(data_section$status, levels = c("very.behind", 'more.behind', 'behind',
"middling", "completed"), ordered = T)
#Creating a new column for school-section
data_section$school_section <- paste(data_section$school, "-", data_section$section, sep = "")
#Plotting a line chart for each of the stauses
p1 <- ggplot(data_section, aes(x = status, y = percent)) + geom_line(aes(group = school_section, color = school))
p1
categories
head(data_section)
#ordering the status
data_section$status <- categories
head(data_section)
#Getting percentage of each section and keeping the school and section name
data_section <- data %>% rowPercentage(school = T, schoolCol = "school", section = T, sectionCol = "section") %>%
gather("status", "percent", c(-school, -section))
#ordering the status
data_section$status <- factor(data_section$status, levels = c("very.behind", 'more.behind', 'behind',
"middling", "completed"), ordered = T)
#Getting percentage of each section and keeping the school and section name
data_section <- data %>% rowPercentage(school = T, schoolCol = "school", section = T, sectionCol = "section") %>%
gather("status", "percent", c(-school, -section))
#ordering the status
data_section$status <- factor(data_section$status, levels = c("very.behind", 'more.behind', 'behind',
"middling", "completed"), ordered = T)
head(data_section)
categories
levels(categories)
#Getting percentage of each section and keeping the school and section name
data_section <- data %>% rowPercentage(school = T, schoolCol = "school", section = T, sectionCol = "section") %>%
gather("status", "percent", c(-school, -section)) %>% mutate(status = levels(categories))
#Getting percentage of each section and keeping the school and section name
data_section <- data %>% rowPercentage(school = T, schoolCol = "school", section = T, sectionCol = "section") %>%
gather("status", "percent", c(-school, -section))
#ordering the status
data_section$status <- factor(data_section$status, levels = c("very.behind", 'more.behind', 'behind',
"middling", "completed"), ordered = T)
head(data_section)
#Creating a new column for school-section
data_section$school_section <- paste(data_section$school, "-", data_section$section, sep = "")
#Plotting a line chart for each of the stauses
p1 <- ggplot(data_section, aes(x = status, y = percent)) + geom_line(aes(group = school_section, color = school))
p1
#Getting percentage of each section and keeping the school and section name
data_section <- data %>% rowPercentage(school = T, schoolCol = "school", section = T, sectionCol = "section") %>%
gather("status", "percent", c(-school, -section)) %>% mutate(status = factor(status, levels =
c("very.behind", "more.behind", "behind", "middling", "completed"), ordered = T))
head(data_section)
#Getting percentage of each section and keeping the school and section name
data_section <- data %>% rowPercentage(school = T, schoolCol = "school", section = T, sectionCol = "section") %>%
gather("status", "percent", c(-school, -section)) %>% mutate(status = factor(status, levels =
c("very.behind", "more.behind", "behind", "middling", "completed"), ordered = T),
school_section = paste(school, "-", section, sep = ""))
#Plotting a line chart for each of the stauses
p1 <- ggplot(data_section, aes(x = status, y = percent)) + geom_line(aes(group = school_section, color = school))
p1
data %>% select(-section) %>% group_by(school) %>%
summarise_all(sum) %>% gather("status", "count", -school) %>%
mutate(status =  factor(status, levels = c("very.behind", "more.behind",
"behind", "middling", "completed"), ordered = T)) %>%
ggplot(aes(x = status, y = count, group = school, col = school)) +
geom_line()
#Attempt to plot each of the schools
new_data <- dataGrouped %>% gather("status", "percent", -school) %>%
mutate(status =  factor(status, levels =
c("very.behind", "more.behind", "behind", "middling", "completed"), ordered = T))
#plotting the percentages for each school
p <- ggplot(new_data, aes(x = status, y = percent, group = school)) + geom_line(aes(col = school))
p <- p + xlab("Student Status") + ylab("Percentage")
p
data_section <- data %>%
gather("status", "count", c(-school, -section)) %>% mutate(status = factor(status, levels =
c("very.behind", "more.behind", "behind", "middling", "completed"), ordered = T),
school_section = paste(school, "-", section, sep = ""))
head(data_section)
data_section <- data %>%
gather("status", "count", c(-school, -section)) %>% mutate(status = factor(status, levels =
c("very.behind", "more.behind", "behind", "middling", "completed"), ordered = T),
school_section = paste(school, "-", section, sep = "")) %>% ggplot(aes(x = status,
y = count, group = school_section, color = school)) + geom_line
data_section <- data %>%
gather("status", "count", c(-school, -section)) %>% mutate(status = factor(status, levels =
c("very.behind", "more.behind", "behind", "middling", "completed"), ordered = T),
school_section = paste(school, "-", section, sep = "")) %>% ggplot(aes(x = status,
y = count, group = school_section, color = school)) + geom_line()
data %>%
gather("status", "count", c(-school, -section)) %>% mutate(status = factor(status, levels =
c("very.behind", "more.behind", "behind", "middling", "completed"), ordered = T),
school_section = paste(school, "-", section, sep = "")) %>% ggplot(aes(x = status,
y = count, group = school_section, color = school)) + geom_line()
#Getting percentage of each section and keeping the school and section name
data %>% rowPercentage(school = T, schoolCol = "school", section = T, sectionCol = "section") %>%
gather("status", "percent", c(-school, -section)) %>% mutate(status = factor(status, levels =
c("very.behind", "more.behind", "behind", "middling", "completed"), ordered = T),
school_section = paste(school, "-", section, sep = "")) %>%
ggplot(aes(x = status, y = percent)) + geom_line(aes(group = school_section, color = school))
#Getting percentage of each section and keeping the school and section name
data %>% rowPercentage(school = T, schoolCol = "school", section = T, sectionCol = "section") %>%
gather("status", "percent", c(-school, -section)) %>% mutate(status = factor(status, levels =
c("very.behind", "more.behind", "behind", "middling", "completed"), ordered = T),
school_section = paste(school, "-", section, sep = "")) %>%
ggplot(aes(x = status, y = percent)) + geom_line(aes(group = school_section, color = school)) +
ggtitle("Student Status Percentage by Section")
#tidying by school and status
school_df <- data %>% select(-section) %>% gather("status", "count", -school) %>%
mutate(status = factor(status, levels = c("very.behind", 'more.behind',
'behind', 'middling', 'completed'), ordered = T))
#Creating a plot that has the count in each level by school
p.count <- ggplot(school_df, aes(x = status, y = count)) + geom_col(aes(fill = school))
p.count <- p.count + ggtitle("Status of Students in Math Course")
p.count
#Getting class average for student profress
adj_data <- data %>% mutate(totalStudents = rowSums(.[3:7])) %>%
mutate(more.behind = more.behind * 2, behind = behind * 3,
middling = middling * 4, completed = completed * 5) %>%
mutate(avg = rowSums(.[3:7] / totalStudents)) %>%
select(c(school, section, avg, totalStudents))
#plotting a histogram of the data
p1 <- ggplot(temp_data, aes(avg, fill = school)) + geom_histogram(bins = 15) + xlim(2, 5)
p1 <- p1 + geom_vline(xintercept = mean(adj_data$avg)) + ylab("Count") + xlab("Class Average")
p1 <- p1 + ggtitle("Distribution of Student Progress by Section")
p1
head(adj_data[order(adj_data$avg), ], 5)
plot.title <- paste("Total Students vs. Class Performance, R = ", round(cor(adj_data$total, adj_data$avg), 3), sep = "")
p2 <- ggplot(adj_data, aes(x = totalStudents, y = avg)) + geom_point(aes(color = school))
p2 <- p2 +  ggtitle("Number of Students vs. Performance") + xlab("Number of Students")
p2 <- p2 + ylab("Class Performance") + geom_smooth(method = 'lm', se = F)
p2 <- p2 + ggtitle(plot.title)
p2
data %>%
gather("status", "count", c(-school, -section)) %>% mutate(status = factor(status, levels =
c("very.behind", "more.behind", "behind", "middling", "completed"), ordered = T),
school_section = paste(school, "-", section, sep = "")) %>% ggplot(aes(x = status,
y = count, group = school_section, color = school)) + geom_line() +
ggtitle("Student Status Count by Section")
data %>% group_by(school) %>% summarise_all(sum)
data %>% group_by(school) %>% select(-section) %>%
summarise_all(sum) %>% prop.table()
data %>% group_by(school) %>% select(-section) %>%
summarise_all(sum)
data %>% group_by(school) %>% select(-section) %>%
summarise_all(sum) %>% gather("status", "count", -school) %>%
table(school, status)
data %>% group_by(school) %>% select(-section) %>%
summarise_all(sum) %>% gather("status", "count", -school) %>%
table()
data %>% group_by(school) %>% select(-section) %>%
summarise_all(sum) %>% gather("status", "count", -school)
data %>% group_by(school) %>% select(-section) %>%
summarise_all(sum)
?summarise
data %>% group_by(school) %>% select(-section) %>% mutate(total = sum())
data %>% group_by(school) %>% select(-section) %>% mutate(total = sum
data %>% group_by(school) %>% select(-section) %>% mutate(total = sum)
data %>% group_by(school) %>% select(-section) %>% mutate(total = sum)
data %>% group_by(school) %>% select(-section) %>% mutate(total = sum(very.behind, more.behind))
data %>% group_by(school) %>% select(-section) %>% mutate(total = sum(very.behind, more.behind,
behind, middling, completed)) %>% summarise_if( !%in% c("school", "total"), sum)
data %>% group_by(school) %>% select(-section) %>% mutate(total = sum(very.behind, more.behind,
behind, middling, completed)) %>% summarise_if(names !%in% c("school", "total"), sum)
data %>% group_by(school) %>% select(-section) %>% mutate(total = sum(very.behind, more.behind,
behind, middling, completed)) %>% summarise_if(! %in% c("school", "total"), sum)
data %>% group_by(school) %>% select(-section) %>% mutate(total = sum(very.behind, more.behind,
behind, middling, completed)) %>% summarise_if(!(%in% c("school", "total")), sum)
data %>% group_by(school) %>% select(-section) %>% mutate(total = sum(very.behind, more.behind,
behind, middling, completed)) %>% summarise_if(!(names %in% c("school", "total")), sum)
data %>% group_by(school) %>% select(-section) %>% mutate(total = sum(very.behind, more.behind,
behind, middling, completed)) %>% summarise_if(!(colnames %in% c("school", "total")), sum)
data_summed <- data %>% group_by(school) %>% select(-section) %>% summarise_all(sum)
data_summed
select(data_summed, very.behind:completed)
select(data_summed, very.behind:completed) <- select(data_summed, very.behind:completed) /
sum(select(data_summed, very.behind:completed)) * 100
data_summed[select(data_summed, very.behind:completed)) <- select(data_summed, very.behind:completed) /
data_summed[,select(data_summed, very.behind:completed)] <- select(data_summed, very.behind:completed) / sum(select(data_summed, very.behind:completed)) * 100
data_summed[,very.behind:completed] <- select(data_summed, very.behind:completed) / sum(select(data_summed, very.behind:completed)) * 100
data_summed[,"very.behind":"completed"] <- select(data_summed, very.behind:completed) / sum(select(data_summed, very.behind:completed)) * 100
data_summed[,2:ncol(data_summed)] <- select(data_summed, very.behind:completed) / sum(select(data_summed, very.behind:completed)) * 100
data_summed
#read the data
data <- read.csv("data-storyteller.csv")
#rename the columns
column.names <- c("school", "section", "ahead", "middling", "behind", "more.behind", "very.behind", "completed")
names(data) <- column.names
#Re-arranging data
data <- data[,c("school", "section", "very.behind", "more.behind", "behind", "middling", "completed", "ahead")]
#Inspect the data
summary(data)
#dropping the ahead column because there are no instances
data <- data %>% select(-ahead)
#Checking for missing data
cat("There are ", sum(!complete.cases(data)), " sections missing data", sep = "")
#read the data
data <- read.csv("data-storyteller.csv")
#rename the columns
column.names <- c("school", "section", "ahead", "middling", "behind", "more.behind", "very.behind", "completed")
names(data) <- column.names
#Re-arranging data
data <- data[,c("school", "section", "very.behind", "more.behind", "behind", "middling", "completed", "ahead")]
#Inspect the data
summary(data)
#dropping the ahead column because there are no instances
data <- data %>% select(-ahead)
#Checking for missing data
cat("\nThere are ", sum(!complete.cases(data)), " sections missing data", sep = "")
data_summed <- data %>% group_by(school) %>% select(-section) %>% summarise_all(sum) %>%
gather("status", "key", -school)
data_summed <- data %>% group_by(school) %>% select(-section) %>% summarise_all(sum) %>%
gather("status", "key", -school) %>% xtabs(count ~ .)
data_summed <- data %>% group_by(school) %>% select(-section) %>% summarise_all(sum) %>%
gather("status", "key", -school) %>% xtabs(data = ., formula = count ~ .)
data_summed <- data %>% group_by(school) %>% select(-section) %>% summarise_all(sum) %>%
gather("status", "key", -school) %>% xtabs(data = as.matrix(.), formula = count ~ .)
data_summed <- data %>% group_by(school) %>% select(-section) %>% summarise_all(sum) %>%
gather("status", "key", -school)
data_summed
data_summed <- data %>% group_by(school) %>% select(-section) %>% summarise_all(sum) %>%
gather("status", "key", -school) %>% as.matrix
data_summed
data_summed <- data %>% group_by(school) %>% select(-section) %>% summarise_all(sum) %>%
mutate(status = factor(status, levels = c("very.behind", "more.behind",
"behind", "middling", "completed"), ordered = T)) %>%
gather("status", "key", -school) %>% as.matrix
data_summed <- data %>% group_by(school) %>% select(-section) %>% summarise_all(sum) %>%
gather("status", "key", -school) %>% mutate(status = factor(status, levels = c("very.behind", "more.behind",
"behind", "middling", "completed"), ordered = T)) %>%
as.matrix
data_summed
data_summed <- data %>% group_by(school) %>% select(-section) %>% summarise_all(sum) %>%
gather("status", "count", -school) %>% as.matrix %>% mutate(school = factor(school),
status = factor(status, levels = c("very.behind", "more.behind", "behind", "middling",
"completed"), ordered = T), count = as.numeric(count))
data_summed <- data %>% group_by(school) %>% select(-section) %>% summarise_all(sum) %>%
gather("status", "count", -school)
data_summed
data_summed <- data %>% group_by(school) %>% select(-section) %>% summarise_all(sum) %>%
gather("status", "count", -school) %>% mutate(status =  factor(status, levels =
c("very.behind", "more.behind", "behind", "middling", "completed"), ordered = T)) %>%
xtabs(count ~ .)
data_summed <- data %>% group_by(school) %>% select(-section) %>% summarise_all(sum) %>%
gather("status", "count", -school) %>% mutate(status =  factor(status, levels =
c("very.behind", "more.behind", "behind", "middling", "completed"), ordered = T))
xtabs(count ~ ., data = data_summed)
xtabs(count ~ ., data = data_summed) / sum(data_summed$count) * 100
round(xtabs(count ~ ., data = data_summed) / sum(data_summed$count) * 100, 2)
?xtabs
knitr::kable(round(xtabs(count ~ ., data = data_summed) / sum(data_summed$count) * 100, 2))
knitr::kable(dataGrouped)
knitr::kable(paste(round(xtabs(count ~ ., data = data_summed) / sum(data_summed$count) * 100, 2), "%", sep = ""))
data_summed <- data %>% group_by(school) %>% select(-section) %>% summarise_all(sum) %>%
gather("status", "count", -school) %>% mutate(status =  factor(status, levels =
c("very.behind", "more.behind", "behind", "middling", "completed"), ordered = T))
knitr::kable(round(xtabs(count ~ ., data = data_summed) / sum(data_summed$count) * 100, 2))
#Getting class average for student profress
adj_data <- data %>% mutate(totalStudents = rowSums(.[3:7])) %>%
mutate(more.behind = more.behind * 2, behind = behind * 3,
middling = middling * 4, completed = completed * 5) %>%
mutate(avg = rowSums(.[3:7] / totalStudents)) %>%
select(c(school, section, avg, totalStudents))
#plotting a histogram of the data
p1 <- ggplot(temp_data, aes(avg, fill = school)) + geom_histogram(bins = 15) + xlim(2, 5)
p1 <- p1 + geom_vline(xintercept = mean(adj_data$avg)) + ylab("Count") + xlab("Class Average")
p1 <- p1 + ggtitle("Distribution of Student Progress by Section")
p1
